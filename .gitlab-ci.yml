stages:
  - package
  - test
  - build
  - deploy
  
package:
  stage: package
  trigger: 
    branch: main
  image: mcr.microsoft.com/dotnet/sdk:2.1
  script: 
    - 'dotnet restore'
    - 'dotnet build' 

Test:
  stage: test
  image: mcr.microsoft.com/dotnet/sdk:2.1
  script:
    - 'dotnet test --test-adapter-path:. --logger:"junit;LogFilePath=./test-result.xml;MethodFormat=Class;FailureBodyFormat=Verbose"'
  artifacts:
    when: always
    paths:
      - ./test-result.xml
    reports:
      junit:
        - ./test-result.xml

build_image:
    stage: build
    #tags:
    #- docker
    variables:
      # To push to a specific docker tag other than latest(the default), amend the --destination parameter, e.g. --destination $CI_REGISTRY_IMAGE:$CI_BUILD_REF_NAME
      # See https://docs.gitlab.com/ee/ci/variables/predefined_variables.html#variables-reference for available variables
      IMAGE_DESTINATION: ${CI_REGISTRY_IMAGE}:$CI_PIPELINE_ID
      KUBECONFIG: ~/deploy/config
    image: 
        # We recommend using the CERN version of the Kaniko image: gitlab-registry.cern.ch/ci-tools/docker-image-builder
        name: gitlab-registry.cern.ch/ci-tools/docker-image-builder
        entrypoint: [""]
    script:
        # Prepare Kaniko configuration file
        - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
        # Build and push the image from the Dockerfile at the root of the project.
        - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $IMAGE_DESTINATION
        # Print the full registry path of the pushed image
        - echo "Image pushed successfully to ${IMAGE_DESTINATION}"
 
deploy:
  stage: deploy
  tags:
    - task
  variables:
    KUBECONFIG: /etc/deploy/config
  image: 
    #name: registry.cn-hangzhou.aliyuncs.com/haoshuwei24/kubectl:1.16.6
    name: roffe/kubectl
    entrypoint: [""]
  script:
    - mkdir -p /etc/deploy/
    - echo $kube_config | base64 -d > "$KUBECONFIG"
    - sed -i "s/<VERSION>/${CI_PIPELINE_ID}/g" deployment.yaml
    - cat deployment.yaml
    - kubectl apply -f deployment.yaml
